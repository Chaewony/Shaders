////////////////////////////////////////////////////////////////////////////////
// Filename: light.ps
////////////////////////////////////////////////////////////////////////////////


/////////////
// GLOBALS //
/////////////
Texture2D shaderTexture;
SamplerState SampleType;

cbuffer LightBuffer
{
	float4 ambientColor;
	float4 diffuseColor;
    float3 lightDirection;
    float specularPower;
    float4 specularColor;
};


//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
	float2 tex : TEXCOORD0;
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 LightPixelShader(PixelInputType input) : SV_TARGET
{
	/* option 1
	float4 textureColor;
	textureColor = shaderTexture.Sample(SampleType, input.tex);
	float4 color = (0.0f, 0.0f, 0.0f, 1.0f);
	color = lerp(color, textureColor, 0.5f);
	*/

	float4 textureColor;
	textureColor = shaderTexture.Sample(SampleType, input.tex);
	textureColor = float4(1.0f, 1.0f, 1.0f, 1.0f);
	float4 color = textureColor;

	return color;
}